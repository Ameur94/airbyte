version: "4.3.2"
definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path:
      - "data"
      - "{{ parameters['name'] }}"
  requester:
    type: CustomRequester
    class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
    url_base: "https://api.monday.com/v2"
    authenticator:
      type: BearerAuthenticator
      api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
        {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
        if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
        '') }}"
    limit: "{{ parameters['items_per_page'] }}"
    nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
    error_handler:
      type: CompositeErrorHandler
      error_handlers:
      - type: "DefaultErrorHandler"
        response_filters:
        - predicate: "{{ 'error_code' in response and response['error_code'] == 'ComplexityException'
            }}"
          action: RETRY
        - predicate: "{{ 'error_code' in response and response['error_code'] == 'complexityBudgetExhausted'
            }}"
          action: RETRY
        backoff_strategies:
        - type: ConstantBackoffStrategy
          backoff_time_in_seconds: 60
      - type: "DefaultErrorHandler"
        description: " Ignore the slice when there is no access to the requested entity
          - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
        response_filters:
        - http_codes:
          - 403
          action: IGNORE
      - type: "DefaultErrorHandler"
        description: " Retry when `Internal Server Error occures - `code: 500, message:
          Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
        response_filters:
        - http_codes:
          - 500
          - 502
          action: RETRY
        backoff_strategies:
        - type: ExponentialBackoffStrategy
  default_paginator:
    type: "DefaultPaginator"
    pagination_strategy:
      type: "PageIncrement"
      start_from_page: 1
      page_size: 100
  retriever:
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
        - "data"
        - "{{ parameters['name'] }}"
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        type: "PageIncrement"
        start_from_page: 1
        page_size: 100
  base_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 100
    primary_key: "id"
  base_nopagination_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: NoPagination
  tags_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: NoPagination
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          color:
            type:
            - 'null'
            - string
          id:
            type:
            - 'null'
            - string
          name:
            type:
            - 'null'
            - string
  teams_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: NoPagination
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          id:
            type:
            - 'null'
            - integer
          name:
            type:
            - 'null'
            - string
          picture_url:
            type:
            - 'null'
            - string
          users:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
  updates_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 100
    primary_key: "id"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          assets:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                created_at:
                  type:
                  - 'null'
                  - string
                  format: date-time
                file_extension:
                  type:
                  - 'null'
                  - string
                file_size:
                  type:
                  - 'null'
                  - integer
                id:
                  type:
                  - 'null'
                  - string
                name:
                  type:
                  - 'null'
                  - string
                original_geometry:
                  type:
                  - 'null'
                  - string
                public_url:
                  type:
                  - 'null'
                  - string
                uploaded_by:
                  type:
                  - 'null'
                  - object
                  properties:
                    id:
                      type:
                      - 'null'
                      - string
                url:
                  type:
                  - 'null'
                  - string
                url_thumbnail:
                  type:
                  - 'null'
                  - string
          body:
            type:
            - 'null'
            - string
          created_at:
            type:
            - 'null'
            - string
            format: date-time
          creator_id:
            type:
            - 'null'
            - string
          id:
            type:
            - 'null'
            - string
          item_id:
            type:
            - 'null'
            - string
          replies:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
                creator_id:
                  type:
                  - 'null'
                  - string
                created_at:
                  type:
                  - 'null'
                  - string
                  format: date-time
                text_body:
                  type:
                  - 'null'
                  - string
                updated_at:
                  type:
                  - 'null'
                  - string
                  format: date-time
                body:
                  type:
                  - 'null'
                  - string
          text_body:
            type:
            - 'null'
            - string
          updated_at:
            type:
            - 'null'
            - string
            format: date-time
  users_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 100
    primary_key: "id"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          birthday:
            type:
            - 'null'
            - string
            format: date-time
          country_code:
            type:
            - 'null'
            - string
          created_at:
            type:
            - 'null'
            - string
            format: date-time
          join_date:
            type:
            - 'null'
            - string
            format: date
          email:
            type:
            - 'null'
            - string
          enabled:
            type:
            - 'null'
            - boolean
          id:
            type:
            - 'null'
            - string
          is_admin:
            type:
            - 'null'
            - boolean
          is_guest:
            type:
            - 'null'
            - boolean
          is_pending:
            type:
            - 'null'
            - boolean
          is_view_only:
            type:
            - 'null'
            - boolean
          is_verified:
            type:
            - 'null'
            - boolean
          location:
            type:
            - 'null'
            - string
          mobile_phone:
            type:
            - 'null'
            - string
          name:
            type:
            - 'null'
            - string
          phone:
            type:
            - 'null'
            - string
          photo_original:
            type:
            - 'null'
            - string
          photo_small:
            type:
            - 'null'
            - string
          photo_thumb:
            type:
            - 'null'
            - string
          photo_thumb_small:
            type:
            - 'null'
            - string
          photo_tiny:
            type:
            - 'null'
            - string
          time_zone_identifier:
            type:
            - 'null'
            - string
          title:
            type:
            - 'null'
            - string
          url:
            type:
            - 'null'
            - string
          utc_hours_diff:
            type:
            - 'null'
            - integer
  workspaces_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 100
    primary_key: "id"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          created_at:
            type:
            - 'null'
            - string
            format: date-time
          description:
            type:
            - 'null'
            - string
          id:
            type:
            - 'null'
            - string
          kind:
            type:
            - 'null'
            - string
          name:
            type:
            - 'null'
            - string
          state:
            type:
            - 'null'
            - string
          account_product:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
              kind:
                type:
                - 'null'
                - string
          owners_subscribers:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
          settings:
            type:
            - 'null'
            - object
            properties:
              icon:
                type:
                - 'null'
                - object
                properties:
                  color:
                    type:
                    - 'null'
                    - string
                  image:
                    type:
                    - 'null'
                    - string
          team_owners_subscribers:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
                name:
                  type:
                  - 'null'
                  - string
          teams_subscribers:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
                name:
                  type:
                  - 'null'
                  - string
          users_subscribers:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
  double_paginator:
    type: "DefaultPaginator"
    pagination_strategy:
      class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
      type: "CustomPaginationStrategy"
  cursor_paginator:
    type: "DefaultPaginator"
    pagination_strategy:
      class_name: "source_declarative_manifest.components.ItemCursorPaginationStrategy"
      type: "CustomPaginationStrategy"
  activity_logs_stream:
    description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
    incremental_sync:
      type: CustomIncrementalSync
      class_name: source_declarative_manifest.components.IncrementalSingleSlice
      cursor_field: "created_at_int"
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          class_name: "source_declarative_manifest.components.MondayActivityExtractor"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
          type: "CustomPaginationStrategy"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          id:
            type:
            - 'null'
            - string
          event:
            type:
            - 'null'
            - string
          data:
            type:
            - 'null'
            - string
          entity:
            type:
            - 'null'
            - string
          created_at:
            type:
            - 'null'
            - string
          created_at_int:
            type:
            - 'null'
            - integer
          pulse_id:
            type:
            - 'null'
            - integer
          board_id:
            type:
            - 'null'
            - integer
  substream_semi_incremental:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          type: DpathExtractor
          field_path:
          - "data"
          - "{{ parameters['name'] }}"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 100
    primary_key: "id"
    incremental_sync:
      type: CustomIncrementalSync
      class_name: source_declarative_manifest.components.IncrementalSubstreamSlicer
      cursor_field: "updated_at_int"
      parent_complete_fetch: true
      parent_stream_configs:
      - type: ParentStreamConfig
        stream:
          description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
          incremental_sync:
            type: CustomIncrementalSync
            class_name: source_declarative_manifest.components.IncrementalSingleSlice
            cursor_field: "created_at_int"
          retriever:
            record_selector:
              type: RecordSelector
              extractor:
                class_name: "source_declarative_manifest.components.MondayActivityExtractor"
            requester:
              type: CustomRequester
              class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
              url_base: "https://api.monday.com/v2"
              authenticator:
                type: BearerAuthenticator
                api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
                  {}).get('auth_type') == 'api_token' else config.get('credentials',
                  {}).get('access_token') if config.get('credentials', {}).get('auth_type')
                  == 'oauth2.0' else config.get('api_token', '') }}"
              limit: "{{ parameters['items_per_page'] }}"
              nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
              error_handler:
                type: CompositeErrorHandler
                error_handlers:
                - type: "DefaultErrorHandler"
                  response_filters:
                  - predicate: "{{ 'error_code' in response and response['error_code']
                      == 'ComplexityException' }}"
                    action: RETRY
                  - predicate: "{{ 'error_code' in response and response['error_code']
                      == 'complexityBudgetExhausted' }}"
                    action: RETRY
                  backoff_strategies:
                  - type: ConstantBackoffStrategy
                    backoff_time_in_seconds: 60
                - type: "DefaultErrorHandler"
                  description: " Ignore the slice when there is no access to the requested
                    entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
                  response_filters:
                  - http_codes:
                    - 403
                    action: IGNORE
                - type: "DefaultErrorHandler"
                  description: " Retry when `Internal Server Error occures - `code:
                    500, message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
                  response_filters:
                  - http_codes:
                    - 500
                    - 502
                    action: RETRY
                  backoff_strategies:
                  - type: ExponentialBackoffStrategy
            paginator:
              type: "DefaultPaginator"
              pagination_strategy:
                class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
                type: "CustomPaginationStrategy"
          schema_loader:
            type: InlineSchemaLoader
            schema:
              $schema: http://json-schema.org/draft-07/schema#
              type: object
              properties:
                id:
                  type:
                  - 'null'
                  - string
                event:
                  type:
                  - 'null'
                  - string
                data:
                  type:
                  - 'null'
                  - string
                entity:
                  type:
                  - 'null'
                  - string
                created_at:
                  type:
                  - 'null'
                  - string
                created_at_int:
                  type:
                  - 'null'
                  - integer
                pulse_id:
                  type:
                  - 'null'
                  - integer
                board_id:
                  type:
                  - 'null'
                  - integer
        partition_field: "ids"
  incremental_extractor:
    class_name: "source_declarative_manifest.components.MondayIncrementalItemsExtractor"
  boards_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          class_name: "source_declarative_manifest.components.MondayIncrementalItemsExtractor"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          type: "PageIncrement"
          start_from_page: 1
          page_size: 10
    primary_key: "id"
    incremental_sync:
      type: CustomIncrementalSync
      class_name: source_declarative_manifest.components.IncrementalSubstreamSlicer
      cursor_field: "updated_at_int"
      parent_complete_fetch: true
      parent_stream_configs:
      - type: ParentStreamConfig
        stream:
          description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
          incremental_sync:
            type: CustomIncrementalSync
            class_name: source_declarative_manifest.components.IncrementalSingleSlice
            cursor_field: "created_at_int"
          retriever:
            record_selector:
              type: RecordSelector
              extractor:
                class_name: "source_declarative_manifest.components.MondayActivityExtractor"
            requester:
              type: CustomRequester
              class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
              url_base: "https://api.monday.com/v2"
              authenticator:
                type: BearerAuthenticator
                api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
                  {}).get('auth_type') == 'api_token' else config.get('credentials',
                  {}).get('access_token') if config.get('credentials', {}).get('auth_type')
                  == 'oauth2.0' else config.get('api_token', '') }}"
              limit: "{{ parameters['items_per_page'] }}"
              nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
              error_handler:
                type: CompositeErrorHandler
                error_handlers:
                - type: "DefaultErrorHandler"
                  response_filters:
                  - predicate: "{{ 'error_code' in response and response['error_code']
                      == 'ComplexityException' }}"
                    action: RETRY
                  - predicate: "{{ 'error_code' in response and response['error_code']
                      == 'complexityBudgetExhausted' }}"
                    action: RETRY
                  backoff_strategies:
                  - type: ConstantBackoffStrategy
                    backoff_time_in_seconds: 60
                - type: "DefaultErrorHandler"
                  description: " Ignore the slice when there is no access to the requested
                    entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
                  response_filters:
                  - http_codes:
                    - 403
                    action: IGNORE
                - type: "DefaultErrorHandler"
                  description: " Retry when `Internal Server Error occures - `code:
                    500, message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
                  response_filters:
                  - http_codes:
                    - 500
                    - 502
                    action: RETRY
                  backoff_strategies:
                  - type: ExponentialBackoffStrategy
            paginator:
              type: "DefaultPaginator"
              pagination_strategy:
                class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
                type: "CustomPaginationStrategy"
          schema_loader:
            type: InlineSchemaLoader
            schema:
              $schema: http://json-schema.org/draft-07/schema#
              type: object
              properties:
                id:
                  type:
                  - 'null'
                  - string
                event:
                  type:
                  - 'null'
                  - string
                data:
                  type:
                  - 'null'
                  - string
                entity:
                  type:
                  - 'null'
                  - string
                created_at:
                  type:
                  - 'null'
                  - string
                created_at_int:
                  type:
                  - 'null'
                  - integer
                pulse_id:
                  type:
                  - 'null'
                  - integer
                board_id:
                  type:
                  - 'null'
                  - integer
        partition_field: "ids"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          id:
            type:
            - 'null'
            - string
          name:
            type:
            - 'null'
            - string
          board_kind:
            type:
            - 'null'
            - string
          type:
            type:
            - 'null'
            - string
          columns:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                archived:
                  type:
                  - 'null'
                  - boolean
                description:
                  type:
                  - 'null'
                  - string
                id:
                  type:
                  - 'null'
                  - string
                settings_str:
                  type:
                  - 'null'
                  - string
                title:
                  type:
                  - 'null'
                  - string
                type:
                  type:
                  - 'null'
                  - string
                width:
                  type:
                  - 'null'
                  - integer
          communication:
            type:
            - 'null'
            - string
          description:
            type:
            - 'null'
            - string
          groups:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                archived:
                  type:
                  - 'null'
                  - boolean
                color:
                  type:
                  - 'null'
                  - string
                deleted:
                  type:
                  - 'null'
                  - boolean
                id:
                  type:
                  - 'null'
                  - string
                position:
                  type:
                  - 'null'
                  - string
                title:
                  type:
                  - 'null'
                  - string
          owners:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
          creator:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
          permissions:
            type:
            - 'null'
            - string
          state:
            type:
            - 'null'
            - string
          subscribers:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
          tags:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
          top_group:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
          updated_at:
            type:
            - 'null'
            - string
            format: date-time
          updated_at_int:
            type:
            - 'null'
            - integer
          updates:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
          views:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
                name:
                  type:
                  - 'null'
                  - string
                settings_str:
                  type:
                  - 'null'
                  - string
                type:
                  type:
                  - 'null'
                  - string
                view_specific_data_str:
                  type:
                  - 'null'
                  - string
          workspace:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
              kind:
                type:
                - 'null'
                - string
              description:
                type:
                - 'null'
                - string
  items_stream:
    retriever:
      record_selector:
        type: RecordSelector
        extractor:
          class_name: "source_declarative_manifest.components.MondayIncrementalItemsExtractor"
      requester:
        type: CustomRequester
        class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
        url_base: "https://api.monday.com/v2"
        authenticator:
          type: BearerAuthenticator
          api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
            {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
            if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
            '') }}"
        limit: "{{ parameters['items_per_page'] }}"
        nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
        error_handler:
          type: CompositeErrorHandler
          error_handlers:
          - type: "DefaultErrorHandler"
            response_filters:
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'ComplexityException' }}"
              action: RETRY
            - predicate: "{{ 'error_code' in response and response['error_code'] ==
                'complexityBudgetExhausted' }}"
              action: RETRY
            backoff_strategies:
            - type: ConstantBackoffStrategy
              backoff_time_in_seconds: 60
          - type: "DefaultErrorHandler"
            description: " Ignore the slice when there is no access to the requested
              entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
            response_filters:
            - http_codes:
              - 403
              action: IGNORE
          - type: "DefaultErrorHandler"
            description: " Retry when `Internal Server Error occures - `code: 500,
              message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
            response_filters:
            - http_codes:
              - 500
              - 502
              action: RETRY
            backoff_strategies:
            - type: ExponentialBackoffStrategy
      paginator:
        type: "DefaultPaginator"
        pagination_strategy:
          class_name: "source_declarative_manifest.components.ItemCursorPaginationStrategy"
          type: "CustomPaginationStrategy"
    primary_key: "id"
    incremental_sync:
      type: CustomIncrementalSync
      class_name: source_declarative_manifest.components.IncrementalSubstreamSlicer
      cursor_field: "updated_at_int"
      parent_complete_fetch: true
      parent_stream_configs:
      - type: ParentStreamConfig
        stream:
          description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
          incremental_sync:
            type: CustomIncrementalSync
            class_name: source_declarative_manifest.components.IncrementalSingleSlice
            cursor_field: "created_at_int"
          retriever:
            record_selector:
              type: RecordSelector
              extractor:
                class_name: "source_declarative_manifest.components.MondayActivityExtractor"
            requester:
              type: CustomRequester
              class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
              url_base: "https://api.monday.com/v2"
              authenticator:
                type: BearerAuthenticator
                api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
                  {}).get('auth_type') == 'api_token' else config.get('credentials',
                  {}).get('access_token') if config.get('credentials', {}).get('auth_type')
                  == 'oauth2.0' else config.get('api_token', '') }}"
              limit: "{{ parameters['items_per_page'] }}"
              nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
              error_handler:
                type: CompositeErrorHandler
                error_handlers:
                - type: "DefaultErrorHandler"
                  response_filters:
                  - predicate: "{{ 'error_code' in response and response['error_code']
                      == 'ComplexityException' }}"
                    action: RETRY
                  - predicate: "{{ 'error_code' in response and response['error_code']
                      == 'complexityBudgetExhausted' }}"
                    action: RETRY
                  backoff_strategies:
                  - type: ConstantBackoffStrategy
                    backoff_time_in_seconds: 60
                - type: "DefaultErrorHandler"
                  description: " Ignore the slice when there is no access to the requested
                    entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
                  response_filters:
                  - http_codes:
                    - 403
                    action: IGNORE
                - type: "DefaultErrorHandler"
                  description: " Retry when `Internal Server Error occures - `code:
                    500, message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
                  response_filters:
                  - http_codes:
                    - 500
                    - 502
                    action: RETRY
                  backoff_strategies:
                  - type: ExponentialBackoffStrategy
            paginator:
              type: "DefaultPaginator"
              pagination_strategy:
                class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
                type: "CustomPaginationStrategy"
          schema_loader:
            type: InlineSchemaLoader
            schema:
              $schema: http://json-schema.org/draft-07/schema#
              type: object
              properties:
                id:
                  type:
                  - 'null'
                  - string
                event:
                  type:
                  - 'null'
                  - string
                data:
                  type:
                  - 'null'
                  - string
                entity:
                  type:
                  - 'null'
                  - string
                created_at:
                  type:
                  - 'null'
                  - string
                created_at_int:
                  type:
                  - 'null'
                  - integer
                pulse_id:
                  type:
                  - 'null'
                  - integer
                board_id:
                  type:
                  - 'null'
                  - integer
        partition_field: "ids"
    schema_loader:
      type: InlineSchemaLoader
      schema:
        $schema: http://json-schema.org/draft-07/schema#
        type: object
        properties:
          id:
            type:
            - 'null'
            - string
          name:
            type:
            - 'null'
            - string
          assets:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                created_at:
                  type:
                  - 'null'
                  - string
                  format: date-time
                file_extension:
                  type:
                  - 'null'
                  - string
                file_size:
                  type:
                  - 'null'
                  - integer
                id:
                  type:
                  - 'null'
                  - string
                name:
                  type:
                  - 'null'
                  - string
                original_geometry:
                  type:
                  - 'null'
                  - string
                public_url:
                  type:
                  - 'null'
                  - string
                uploaded_by:
                  type:
                  - 'null'
                  - object
                  properties:
                    id:
                      type:
                      - 'null'
                      - string
                url:
                  type:
                  - 'null'
                  - string
                url_thumbnail:
                  type:
                  - 'null'
                  - string
          board:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
          column_values:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
                text:
                  type:
                  - 'null'
                  - string
                type:
                  type:
                  - 'null'
                  - string
                value:
                  type:
                  - 'null'
                  - string
                display_value:
                  type:
                  - 'null'
                  - string
          created_at:
            type:
            - 'null'
            - string
            format: date-time
          creator_id:
            type:
            - 'null'
            - string
          group:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
          parent_item:
            type:
            - 'null'
            - object
            properties:
              id:
                type:
                - 'null'
                - string
          state:
            type:
            - 'null'
            - string
          subscribers:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
          updated_at:
            type:
            - 'null'
            - string
            format: date-time
          updated_at_int:
            type:
            - 'null'
            - integer
          updates:
            type:
            - 'null'
            - array
            items:
              type:
              - 'null'
              - object
              additionalProperties: true
              properties:
                id:
                  type:
                  - 'null'
                  - string
streams:
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        class_name: "source_declarative_manifest.components.MondayIncrementalItemsExtractor"
        type: CustomRecordExtractor
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        class_name: "source_declarative_manifest.components.ItemCursorPaginationStrategy"
        type: "CustomPaginationStrategy"
    type: SimpleRetriever
  primary_key: "id"
  incremental_sync:
    type: CustomIncrementalSync
    class_name: source_declarative_manifest.components.IncrementalSubstreamSlicer
    cursor_field: "updated_at_int"
    parent_complete_fetch: true
    parent_stream_configs:
    - type: ParentStreamConfig
      stream:
        description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
        incremental_sync:
          type: CustomIncrementalSync
          class_name: source_declarative_manifest.components.IncrementalSingleSlice
          cursor_field: "created_at_int"
        retriever:
          record_selector:
            type: RecordSelector
            extractor:
              class_name: "source_declarative_manifest.components.MondayActivityExtractor"
              type: CustomRecordExtractor
          requester:
            type: CustomRequester
            class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
            url_base: "https://api.monday.com/v2"
            authenticator:
              type: BearerAuthenticator
              api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
                {}).get('auth_type') == 'api_token' else config.get('credentials',
                {}).get('access_token') if config.get('credentials', {}).get('auth_type')
                == 'oauth2.0' else config.get('api_token', '') }}"
            limit: "{{ parameters['items_per_page'] }}"
            nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
            error_handler:
              type: CompositeErrorHandler
              error_handlers:
              - type: "DefaultErrorHandler"
                response_filters:
                - predicate: "{{ 'error_code' in response and response['error_code']
                    == 'ComplexityException' }}"
                  action: RETRY
                  type: HttpResponseFilter
                - predicate: "{{ 'error_code' in response and response['error_code']
                    == 'complexityBudgetExhausted' }}"
                  action: RETRY
                  type: HttpResponseFilter
                backoff_strategies:
                - type: ConstantBackoffStrategy
                  backoff_time_in_seconds: 60
              - type: "DefaultErrorHandler"
                description: " Ignore the slice when there is no access to the requested
                  entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
                response_filters:
                - http_codes:
                  - 403
                  action: IGNORE
                  type: HttpResponseFilter
              - type: "DefaultErrorHandler"
                description: " Retry when `Internal Server Error occures - `code:
                  500, message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
                response_filters:
                - http_codes:
                  - 500
                  - 502
                  action: RETRY
                  type: HttpResponseFilter
                backoff_strategies:
                - type: ExponentialBackoffStrategy
          paginator:
            type: "DefaultPaginator"
            pagination_strategy:
              class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
              type: "CustomPaginationStrategy"
          type: SimpleRetriever
        schema_loader:
          type: InlineSchemaLoader
          schema:
            $schema: http://json-schema.org/draft-07/schema#
            type: object
            properties:
              id:
                type:
                - 'null'
                - string
              event:
                type:
                - 'null'
                - string
              data:
                type:
                - 'null'
                - string
              entity:
                type:
                - 'null'
                - string
              created_at:
                type:
                - 'null'
                - string
              created_at_int:
                type:
                - 'null'
                - integer
              pulse_id:
                type:
                - 'null'
                - integer
              board_id:
                type:
                - 'null'
                - integer
        type: DeclarativeStream
        name: "activity_logs"
        primary_key: "id"
      partition_field: "ids"
      parent_key: "pulse_id"
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        id:
          type:
          - 'null'
          - string
        name:
          type:
          - 'null'
          - string
        assets:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              created_at:
                type:
                - 'null'
                - string
                format: date-time
              file_extension:
                type:
                - 'null'
                - string
              file_size:
                type:
                - 'null'
                - integer
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
              original_geometry:
                type:
                - 'null'
                - string
              public_url:
                type:
                - 'null'
                - string
              uploaded_by:
                type:
                - 'null'
                - object
                properties:
                  id:
                    type:
                    - 'null'
                    - string
              url:
                type:
                - 'null'
                - string
              url_thumbnail:
                type:
                - 'null'
                - string
        board:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
            name:
              type:
              - 'null'
              - string
        column_values:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
              text:
                type:
                - 'null'
                - string
              type:
                type:
                - 'null'
                - string
              value:
                type:
                - 'null'
                - string
              display_value:
                type:
                - 'null'
                - string
        created_at:
          type:
          - 'null'
          - string
          format: date-time
        creator_id:
          type:
          - 'null'
          - string
        group:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
        parent_item:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
        state:
          type:
          - 'null'
          - string
        subscribers:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
        updated_at_int:
          type:
          - 'null'
          - integer
        updates:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
  type: DeclarativeStream
  name: "items"
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        class_name: "source_declarative_manifest.components.MondayIncrementalItemsExtractor"
        type: CustomRecordExtractor
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        type: "PageIncrement"
        start_from_page: 1
        page_size: 10
    type: SimpleRetriever
  primary_key: "id"
  incremental_sync:
    type: CustomIncrementalSync
    class_name: source_declarative_manifest.components.IncrementalSubstreamSlicer
    cursor_field: "updated_at_int"
    parent_complete_fetch: true
    parent_stream_configs:
    - type: ParentStreamConfig
      stream:
        description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
        incremental_sync:
          type: CustomIncrementalSync
          class_name: source_declarative_manifest.components.IncrementalSingleSlice
          cursor_field: "created_at_int"
        retriever:
          record_selector:
            type: RecordSelector
            extractor:
              class_name: "source_declarative_manifest.components.MondayActivityExtractor"
              type: CustomRecordExtractor
          requester:
            type: CustomRequester
            class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
            url_base: "https://api.monday.com/v2"
            authenticator:
              type: BearerAuthenticator
              api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
                {}).get('auth_type') == 'api_token' else config.get('credentials',
                {}).get('access_token') if config.get('credentials', {}).get('auth_type')
                == 'oauth2.0' else config.get('api_token', '') }}"
            limit: "{{ parameters['items_per_page'] }}"
            nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
            error_handler:
              type: CompositeErrorHandler
              error_handlers:
              - type: "DefaultErrorHandler"
                response_filters:
                - predicate: "{{ 'error_code' in response and response['error_code']
                    == 'ComplexityException' }}"
                  action: RETRY
                  type: HttpResponseFilter
                - predicate: "{{ 'error_code' in response and response['error_code']
                    == 'complexityBudgetExhausted' }}"
                  action: RETRY
                  type: HttpResponseFilter
                backoff_strategies:
                - type: ConstantBackoffStrategy
                  backoff_time_in_seconds: 60
              - type: "DefaultErrorHandler"
                description: " Ignore the slice when there is no access to the requested
                  entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
                response_filters:
                - http_codes:
                  - 403
                  action: IGNORE
                  type: HttpResponseFilter
              - type: "DefaultErrorHandler"
                description: " Retry when `Internal Server Error occures - `code:
                  500, message: Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
                response_filters:
                - http_codes:
                  - 500
                  - 502
                  action: RETRY
                  type: HttpResponseFilter
                backoff_strategies:
                - type: ExponentialBackoffStrategy
          paginator:
            type: "DefaultPaginator"
            pagination_strategy:
              class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
              type: "CustomPaginationStrategy"
          type: SimpleRetriever
        schema_loader:
          type: InlineSchemaLoader
          schema:
            $schema: http://json-schema.org/draft-07/schema#
            type: object
            properties:
              id:
                type:
                - 'null'
                - string
              event:
                type:
                - 'null'
                - string
              data:
                type:
                - 'null'
                - string
              entity:
                type:
                - 'null'
                - string
              created_at:
                type:
                - 'null'
                - string
              created_at_int:
                type:
                - 'null'
                - integer
              pulse_id:
                type:
                - 'null'
                - integer
              board_id:
                type:
                - 'null'
                - integer
        type: DeclarativeStream
        name: "activity_logs"
        primary_key: "id"
      partition_field: "ids"
      parent_key: "board_id"
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        id:
          type:
          - 'null'
          - string
        name:
          type:
          - 'null'
          - string
        board_kind:
          type:
          - 'null'
          - string
        type:
          type:
          - 'null'
          - string
        columns:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              archived:
                type:
                - 'null'
                - boolean
              description:
                type:
                - 'null'
                - string
              id:
                type:
                - 'null'
                - string
              settings_str:
                type:
                - 'null'
                - string
              title:
                type:
                - 'null'
                - string
              type:
                type:
                - 'null'
                - string
              width:
                type:
                - 'null'
                - integer
        communication:
          type:
          - 'null'
          - string
        description:
          type:
          - 'null'
          - string
        groups:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              archived:
                type:
                - 'null'
                - boolean
              color:
                type:
                - 'null'
                - string
              deleted:
                type:
                - 'null'
                - boolean
              id:
                type:
                - 'null'
                - string
              position:
                type:
                - 'null'
                - string
              title:
                type:
                - 'null'
                - string
        owners:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
        creator:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
        permissions:
          type:
          - 'null'
          - string
        state:
          type:
          - 'null'
          - string
        subscribers:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
        tags:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
        top_group:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
        updated_at_int:
          type:
          - 'null'
          - integer
        updates:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
        views:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
              settings_str:
                type:
                - 'null'
                - string
              type:
                type:
                - 'null'
                - string
              view_specific_data_str:
                type:
                - 'null'
                - string
        workspace:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
            name:
              type:
              - 'null'
              - string
            kind:
              type:
              - 'null'
              - string
            description:
              type:
              - 'null'
              - string
  type: DeclarativeStream
  name: "boards"
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
        - "data"
        - "{{ parameters['name'] }}"
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: NoPagination
    type: SimpleRetriever
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        color:
          type:
          - 'null'
          - string
        id:
          type:
          - 'null'
          - string
        name:
          type:
          - 'null'
          - string
  type: DeclarativeStream
  name: "tags"
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
        - "data"
        - "{{ parameters['name'] }}"
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: NoPagination
    type: SimpleRetriever
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        id:
          type:
          - 'null'
          - integer
        name:
          type:
          - 'null'
          - string
        picture_url:
          type:
          - 'null'
          - string
        users:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
  type: DeclarativeStream
  name: "teams"
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
        - "data"
        - "{{ parameters['name'] }}"
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        type: "PageIncrement"
        start_from_page: 1
        page_size: 100
    type: SimpleRetriever
  primary_key: "id"
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        assets:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              created_at:
                type:
                - 'null'
                - string
                format: date-time
              file_extension:
                type:
                - 'null'
                - string
              file_size:
                type:
                - 'null'
                - integer
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
              original_geometry:
                type:
                - 'null'
                - string
              public_url:
                type:
                - 'null'
                - string
              uploaded_by:
                type:
                - 'null'
                - object
                properties:
                  id:
                    type:
                    - 'null'
                    - string
              url:
                type:
                - 'null'
                - string
              url_thumbnail:
                type:
                - 'null'
                - string
        body:
          type:
          - 'null'
          - string
        created_at:
          type:
          - 'null'
          - string
          format: date-time
        creator_id:
          type:
          - 'null'
          - string
        id:
          type:
          - 'null'
          - string
        item_id:
          type:
          - 'null'
          - string
        replies:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
              creator_id:
                type:
                - 'null'
                - string
              created_at:
                type:
                - 'null'
                - string
                format: date-time
              text_body:
                type:
                - 'null'
                - string
              updated_at:
                type:
                - 'null'
                - string
                format: date-time
              body:
                type:
                - 'null'
                - string
        text_body:
          type:
          - 'null'
          - string
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
  type: DeclarativeStream
  name: "updates"
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
        - "data"
        - "{{ parameters['name'] }}"
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        type: "PageIncrement"
        start_from_page: 1
        page_size: 100
    type: SimpleRetriever
  primary_key: "id"
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        birthday:
          type:
          - 'null'
          - string
          format: date-time
        country_code:
          type:
          - 'null'
          - string
        created_at:
          type:
          - 'null'
          - string
          format: date-time
        join_date:
          type:
          - 'null'
          - string
          format: date
        email:
          type:
          - 'null'
          - string
        enabled:
          type:
          - 'null'
          - boolean
        id:
          type:
          - 'null'
          - string
        is_admin:
          type:
          - 'null'
          - boolean
        is_guest:
          type:
          - 'null'
          - boolean
        is_pending:
          type:
          - 'null'
          - boolean
        is_view_only:
          type:
          - 'null'
          - boolean
        is_verified:
          type:
          - 'null'
          - boolean
        location:
          type:
          - 'null'
          - string
        mobile_phone:
          type:
          - 'null'
          - string
        name:
          type:
          - 'null'
          - string
        phone:
          type:
          - 'null'
          - string
        photo_original:
          type:
          - 'null'
          - string
        photo_small:
          type:
          - 'null'
          - string
        photo_thumb:
          type:
          - 'null'
          - string
        photo_thumb_small:
          type:
          - 'null'
          - string
        photo_tiny:
          type:
          - 'null'
          - string
        time_zone_identifier:
          type:
          - 'null'
          - string
        title:
          type:
          - 'null'
          - string
        url:
          type:
          - 'null'
          - string
        utc_hours_diff:
          type:
          - 'null'
          - integer
  type: DeclarativeStream
  name: "users"
- retriever:
    record_selector:
      type: RecordSelector
      extractor:
        type: DpathExtractor
        field_path:
        - "data"
        - "{{ parameters['name'] }}"
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        type: "PageIncrement"
        start_from_page: 1
        page_size: 100
    type: SimpleRetriever
  primary_key: "id"
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        created_at:
          type:
          - 'null'
          - string
          format: date-time
        description:
          type:
          - 'null'
          - string
        id:
          type:
          - 'null'
          - string
        kind:
          type:
          - 'null'
          - string
        name:
          type:
          - 'null'
          - string
        state:
          type:
          - 'null'
          - string
        account_product:
          type:
          - 'null'
          - object
          properties:
            id:
              type:
              - 'null'
              - string
            kind:
              type:
              - 'null'
              - string
        owners_subscribers:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
        settings:
          type:
          - 'null'
          - object
          properties:
            icon:
              type:
              - 'null'
              - object
              properties:
                color:
                  type:
                  - 'null'
                  - string
                image:
                  type:
                  - 'null'
                  - string
        team_owners_subscribers:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
        teams_subscribers:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
              name:
                type:
                - 'null'
                - string
        users_subscribers:
          type:
          - 'null'
          - array
          items:
            type:
            - 'null'
            - object
            additionalProperties: true
            properties:
              id:
                type:
                - 'null'
                - string
  type: DeclarativeStream
  name: "workspaces"
- description: "https://developers.intercom.com/intercom-api-reference/reference/scroll-over-all-companies"
  incremental_sync:
    type: CustomIncrementalSync
    class_name: source_declarative_manifest.components.IncrementalSingleSlice
    cursor_field: "created_at_int"
  retriever:
    record_selector:
      type: RecordSelector
      extractor:
        class_name: "source_declarative_manifest.components.MondayActivityExtractor"
        type: CustomRecordExtractor
    requester:
      type: CustomRequester
      class_name: "source_declarative_manifest.components.MondayGraphqlRequester"
      url_base: "https://api.monday.com/v2"
      authenticator:
        type: BearerAuthenticator
        api_token: "{{ config.get('credentials', {}).get('api_token') if config.get('credentials',
          {}).get('auth_type') == 'api_token' else config.get('credentials', {}).get('access_token')
          if config.get('credentials', {}).get('auth_type') == 'oauth2.0' else config.get('api_token',
          '') }}"
      limit: "{{ parameters['items_per_page'] }}"
      nested_limit: "{{ parameters.get('nested_items_per_page', 1) }}"
      error_handler:
        type: CompositeErrorHandler
        error_handlers:
        - type: "DefaultErrorHandler"
          response_filters:
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'ComplexityException' }}"
            action: RETRY
            type: HttpResponseFilter
          - predicate: "{{ 'error_code' in response and response['error_code'] ==
              'complexityBudgetExhausted' }}"
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ConstantBackoffStrategy
            backoff_time_in_seconds: 60
        - type: "DefaultErrorHandler"
          description: " Ignore the slice when there is no access to the requested
            entity - 'code: 403, message: None'. https://github.com/airbytehq/alpha-beta-issues/issues/846 "
          response_filters:
          - http_codes:
            - 403
            action: IGNORE
            type: HttpResponseFilter
        - type: "DefaultErrorHandler"
          description: " Retry when `Internal Server Error occures - `code: 500, message:
            Internal server error`. https://github.com/airbytehq/alpha-beta-issues/issues/245 "
          response_filters:
          - http_codes:
            - 500
            - 502
            action: RETRY
            type: HttpResponseFilter
          backoff_strategies:
          - type: ExponentialBackoffStrategy
    paginator:
      type: "DefaultPaginator"
      pagination_strategy:
        class_name: "source_declarative_manifest.components.ItemPaginationStrategy"
        type: "CustomPaginationStrategy"
    type: SimpleRetriever
  schema_loader:
    type: InlineSchemaLoader
    schema:
      $schema: http://json-schema.org/draft-07/schema#
      type: object
      properties:
        id:
          type:
          - 'null'
          - string
        event:
          type:
          - 'null'
          - string
        data:
          type:
          - 'null'
          - string
        entity:
          type:
          - 'null'
          - string
        created_at:
          type:
          - 'null'
          - string
        created_at_int:
          type:
          - 'null'
          - integer
        pulse_id:
          type:
          - 'null'
          - integer
        board_id:
          type:
          - 'null'
          - integer
  type: DeclarativeStream
  name: "activity_logs"
  primary_key: "id"
check:
  stream_names:
  - "users"
  type: CheckStream
type: DeclarativeSource
spec:
  type: Spec
  documentation_url: https://docs.airbyte.com/integrations/sources/monday
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    title: Monday Spec
    type: object
    required: []
    additionalProperties: true
    properties:
      credentials:
        title: Authorization Method
        type: object
        oneOf:
        - type: object
          title: OAuth2.0
          required:
          - auth_type
          - client_id
          - client_secret
          - access_token
          properties:
            subdomain:
              type: string
              title: Subdomain/Slug
              description: Slug/subdomain of the account, or the first part of the
                URL that comes before .monday.com
              default: ''
              order: 0
            auth_type:
              type: string
              const: oauth2.0
              order: 1
            client_id:
              type: string
              title: Client ID
              description: The Client ID of your OAuth application.
              airbyte_secret: true
            client_secret:
              type: string
              title: Client Secret
              description: The Client Secret of your OAuth application.
              airbyte_secret: true
            access_token:
              type: string
              title: Access Token
              description: Access Token for making authenticated requests.
              airbyte_secret: true
        - type: object
          title: API Token
          required:
          - auth_type
          - api_token
          properties:
            auth_type:
              type: string
              const: api_token
              order: 0
            api_token:
              type: string
              title: Personal API Token
              description: API Token for making authenticated requests.
              airbyte_secret: true

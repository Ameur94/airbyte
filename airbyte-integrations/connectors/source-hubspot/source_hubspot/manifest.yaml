version: 4.1.0

type: DeclarativeSource

check:
  type: CheckStream
  stream_names:
    - accounts

definitions:
  streams:
    accounts:
      type: DeclarativeStream
      name: custom_object
      $parameters:
        fully_qualified_name: ""
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: /crm/v3/objects/{{parameters["fully_qualified_name"]}}
          http_method: GET
          request_parameters:
            q: search
          request_headers:
            Linkedin-Version: "202404"
        record_selector:
          type: RecordSelector
          extractor:
            type: CustomRecordExtractor
            class_name: source_linkedin_ads.components.LinkedInAdsRecordExtractor
          record_filter:
            condition: "{{ record['id'] in config['account_ids'] if config.get('account_ids') else True }}"
        paginator:
          type: DefaultPaginator
          page_token_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: pageToken
          page_size_option:
            type: RequestOption
            inject_into: request_parameter
            field_name: pageSize
          pagination_strategy:
            type: CursorPagination
            page_size: 500
            cursor_value: '{{ response.get("metadata", {}).get("nextPageToken", {}) }}'
            stop_condition: '{{ not response.get("metadata", {}).get("nextPageToken", {}) }}'
      schema_loader:
        type: DynamicSchemaLoader
        stream:
          type: DeclarativeStream
          name: schema_loader
          retriever:
            type: SimpleRetriever
            requester:
              $ref: "#/definitions/base_requester"
              path: /crm/v3/schemas
              http_method: GET
            record_selector:
              type: RecordSelector
              extractor:
                type: DpathExtractor
                field_path: [ ]
            paginator:
              type: NoPagination
  base_requester:
    type: HttpRequester
    url_base: https://api.linkedin.com/rest/
    authenticator: "#/definitions/authenticator"
  # Authenticators
  bearer_authenticator:
    type: BearerAuthenticator
    api_token: "{{ config['credentials']['access_token'] }}"
  oauth_authenticator:
    type: OAuthAuthenticator
    refresh_request_body: {}
    token_refresh_endpoint: https://www.linkedin.com/oauth/v2/accessToken
    grant_type: refresh_token
    client_id: '{{ config["credentials"]["client_id"] }}'
    client_secret: '{{ config["credentials"]["client_secret"] }}'
    refresh_token: '{{ config["credentials"]["refresh_token"] }}'
  authenticator:
    type: SelectiveAuthenticator
    authenticator_selection_path: ["credentials", "auth_method"]
    authenticators:
      OAuth Credentials: "#/definitions/oauth_authenticator"
      Private App Credentials: "#/definitions/bearer_authenticator"
streams:
  - $ref: "#/definitions/streams/custom_object"

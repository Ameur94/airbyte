version: "4.3.2"
definitions:
  selector:
    extractor:
      field_path: []
  selector_features:
    extractor:
      field_path:
        - "features"
  requester:
    url_base: "{{ config['api_url'] }}/client"
    http_method: "GET"
    request_options_provider:
      request_headers:
        "Content-Type": "application/json"
    authenticator:
      type: ApiKeyAuthenticator
      header: "Authorization"
      api_token: "{{ config['api_token'] }}"
    error_handler:
      type: "DefaultErrorHandler"
      error_handlers:
        - response_filters:
            - http_codes:
                - 401
              action: FAIL
            - http_codes:
                - 403
              action: RETRY
  retriever:
    record_selector:
      extractor:
        field_path: []
    paginator:
      type: NoPagination
    requester:
      url_base: "{{ config['api_url'] }}/client"
      http_method: "GET"
      request_options_provider:
        request_headers:
          "Content-Type": "application/json"
      authenticator:
        type: ApiKeyAuthenticator
        header: "Authorization"
        api_token: "{{ config['api_token'] }}"
      error_handler:
        type: "DefaultErrorHandler"
        error_handlers:
          - response_filters:
              - http_codes:
                  - 401
                action: FAIL
              - http_codes:
                  - 403
                action: RETRY
  base_stream:
    retriever:
      record_selector:
        extractor:
          field_path: []
      paginator:
        type: NoPagination
      requester:
        url_base: "{{ config['api_url'] }}/client"
        http_method: "GET"
        request_options_provider:
          request_headers:
            "Content-Type": "application/json"
        authenticator:
          type: ApiKeyAuthenticator
          header: "Authorization"
          api_token: "{{ config['api_token'] }}"
        error_handler:
          type: "DefaultErrorHandler"
          error_handlers:
            - response_filters:
                - http_codes:
                    - 401
                  action: FAIL
                - http_codes:
                    - 403
                  action: RETRY
  features_stream:
    retriever:
      record_selector:
        extractor:
          field_path:
            - "features"
      paginator:
        type: NoPagination
      requester:
        url_base: "{{ config['api_url'] }}/client"
        http_method: "GET"
        request_options_provider:
          request_headers:
            "Content-Type": "application/json"
        authenticator:
          type: ApiKeyAuthenticator
          header: "Authorization"
          api_token: "{{ config['api_token'] }}"
        error_handler:
          type: "DefaultErrorHandler"
          error_handlers:
            - response_filters:
                - http_codes:
                    - 401
                  action: FAIL
                - http_codes:
                    - 403
                  action: RETRY
streams:
  - retriever:
      record_selector:
        extractor:
          field_path:
            - "features"
          type: DpathExtractor
        type: RecordSelector
      paginator:
        type: NoPagination
      requester:
        url_base: "{{ config['api_url'] }}/client"
        http_method: "GET"
        request_options_provider:
          request_headers:
            "Content-Type": "application/json"
        authenticator:
          type: ApiKeyAuthenticator
          header: "Authorization"
          api_token: "{{ config['api_token'] }}"
        error_handler:
          type: "DefaultErrorHandler"
          error_handlers:
            - response_filters:
                - http_codes:
                    - 401
                  action: FAIL
                - http_codes:
                    - 403
                  action: RETRY
        type: HttpRequester
        path:
          "/features?{{ ('project=' ~ config['project_name']) if config['project_name']
          is defined else '' }}&{{ ('namePrefix=' ~ config['nameprefix']) if config['nameprefix']
          is defined else '' }}"
      type: SimpleRetriever
    type: DeclarativeStream
    name: "features"
    primary_key: "name"
check:
  stream_names:
    - "features"
  type: CheckStream
type: DeclarativeSource
spec:
  type: Spec
  documentation_url: https://docs.airbyte.io/integrations/sources/unleash
  connection_specification:
    $schema: https://json-schema.org/draft-07/schema#
    title: Unleash Source Spec
    type: object
    required:
      - api_token
      - api_url
    additionalProperties: true
    properties:
      api_token:
        title: API Token Client
        type: string
        description: >-
          Your API Token (Server-Side SDK [Client]). See <a
          href="https://docs.getunleash.io/how-to/how-to-create-api-tokens/">here</a>.
          The token is
          case sensitive.
        airbyte_secret: true
        examples:
          - "project:environment.be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178"
          - "*:environment.be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178"
          - "be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178"
      api_url:
        title: API URL
        type: string
        description: >-
          Your API URL. No trailing slash. ex: https://unleash.host.com/api
      project_name:
        title: Project Name
        type: string
        description: >-
          Use this if you want to filter the API call for only one given project (can
          be used in addition to the "Feature Name Prefix" field).
          See <a href="https://docs.getunleash.io/reference/api/legacy/unleash/client/features#filter-feature-toggles">here</a>
      nameprefix:
        title: Feature Name Prefix
        type: string
        description: >-
          Use this if you want to filter the API call for only one given project (can
          be used in addition to the "Feature Name Prefix" field).
          See <a href="https://docs.getunleash.io/reference/api/legacy/unleash/client/features#filter-feature-toggles">here</a>
